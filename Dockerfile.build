#!/bin/sh
cd "$(dirname "$0")"  # jump to curdir
set -eu

# Pass these on the command line.
oscodename=${1:-ubuntu/jammy}   # ubuntu/jammy
upname=python3-sipsimple
upversion=${2:-5.2.6}           # version, set automatically
debepoch=
debversion=${3:-0osso0}         # deb build version, e.g. 0osso0


echo "Usage: $0 [$oscodename [$upversion [$debversion]]]"
echo ".. continuing"

osdistro=${oscodename%/*}   # debian (or ubuntu)
oscodename=${oscodename#*/} # stretch (or bionic)
case $osdistro/$oscodename in
debian/bullseye)osdistshort=deb; oscodenum=11;;
debian/buster)  osdistshort=deb; oscodenum=10;;
debian/stretch) osdistshort=deb; oscodenum=9;;
debian/jessie)  osdistshort=deb; oscodenum=8;;
debian/wheezy)  osdistshort=deb; oscodenum=7;;
ubuntu/jammy)   osdistshort=ubu; oscodenum=22.04;;
ubuntu/focal)   osdistshort=ubu; oscodenum=20.04;;
ubuntu/bionic)  osdistshort=ubu; oscodenum=18.04;;
ubuntu/xenial)  osdistshort=ubu; oscodenum=16.04;;
ubuntu/trusty)  osdistshort=ubu; oscodenum=14.04;;
*) echo "ERROR: undefined OS: $osdistro/$oscodename" >&2 && exit 1
esac
_shortver=$osdistshort$oscodenum


git_pull_or_clone() {
    if test -d "$1"; then
        git -C "$1" pull --rebase
    else
        git clone --recursive "$2" "$1"
    fi
}

# Ensure we have python3-sipsimple
git_pull_or_clone source-files/${upname} \
    https://github.com/AGProjects/python3-sipsimple.git
## Improve versioning, based on the git version.
#version_suffix=$(\
#    git -C source-files/${upname} log --date=short --format='%cd' |
#    tr -d '-' | uniq -c | head -n1 | awk '{print $2 "+" $1}')
## Update upversion adding the suffix in there.
#upversion="$upversion+$version_suffix"
upversion=$(git -C source-files/${upname} describe | sed -e 's/-/+/g')

# Docker disallows certain tokens in versions.
dockversion=$(echo build-${upname}-${upversion}-${debversion}-${oscodename} |
    sed -e 's/[^0-9A-Za-z_.-]/_/g')

# Will build files.
docker build \
    --pull \
    --ulimit nofile=512 \
    --build-arg osdistro=$osdistro \
    --build-arg osdistshort=$osdistshort \
    --build-arg oscodename=$oscodename \
    --build-arg upname=$upname \
    --build-arg upversion=$upversion \
    --build-arg debepoch=$debepoch \
    --build-arg debversion=$debversion \
    -t $dockversion \
    -f Dockerfile \
    . || ret=$?
if test ${ret:-0} != 0; then
    echo "fail" >&2
    exit $ret
fi

# Copy files to ./Dockerfile.out
test -d Dockerfile.out/$oscodename || mkdir -p Dockerfile.out/$oscodename
docker run $dockversion sh -c 'cd /dist; tar -zc *' |
    tar -zxvC Dockerfile.out/$oscodename/ |
    sed -e 's#$# -> Dockerfile.out/'$oscodename'/#'
